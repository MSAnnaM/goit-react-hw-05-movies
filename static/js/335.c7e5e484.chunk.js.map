{"version":3,"file":"static/js/335.c7e5e484.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Notification/Notification.jsx","components/SearchComponent/SearchComponent.styled.jsx","components/SearchComponent/SearchComponent.jsx","components/PaginationListComponent/PaginationListComponent.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  margin: 20px;\n  width: 200px;\n  border: 1px solid #4b0082;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #4b0082;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.2em;\n  color: #2c3e50;\n  margin: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 0.8em;\n  color: #666;\n  margin: 10px;\n`;","import defaultImage from '../../images/default-poster.jpg';\nimport {\n  List,\n  ListItem,\n  Image,\n  MovieLink,\n  Title,\n  ReleaseDate,\n} from './MoviesList.styled';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path, release_date }) => (\n        <ListItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImage\n              }\n              alt={original_title}\n            />\n            <Title>{original_title}</Title>\n            {release_date && <ReleaseDate />}\n          </MovieLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default MovieList;\n","import { Notify } from 'notiflix';\n\nconst Notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#8a2be2',\n    },\n  });\n\n  return Notify.info(message);\n};\n\nexport default Notification;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  outline: none;\n  margin-right: 10px;\n  font-size: 16px;\n  color: #333;\n  \n  &:focus {\n    border-color: violet;\n    box-shadow: 0 0 5px rgba(128, 0, 128, 0.5);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 15px;\n  background-color: #9400D3;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  \n  &:hover {\n    background-color: #4B0082;\n  }\n`;","import { Form, Input, Button } from './SearchComponent.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nexport const SearchComponent = ({ onSearch }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    console.log(searchParams);\n    setSearchParams({ query: searchValue });\n    if (searchValue.trim() === '') {\n      return;\n    }\n    onSearch(searchValue);\n  };\n\n  const handleInputChange = e => {\n    setSearchValue(e.currentTarget.value);\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={searchValue}\n        onChange={handleInputChange}\n      ></Input>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\nexport default SearchComponent;\n","import { Pagination } from '@mui/material';\n\nconst PaginationComponent = ({ totalPages, currentPage, onPageChange }) => {\n  const handlePageChange = (_, pageNumber) => {\n    onPageChange(pageNumber);\n  };\n\n  return (\n    <Pagination\n      count={totalPages}\n      page={currentPage}\n      onChange={handlePageChange}\n      color={'success'}\n      sx={{\n        color: '#fff',\n        stroke: '#9400D3',\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '30px',\n        '& .MuiPaginationItem-root': {\n          color: '#fff',\n          backgroundColor: '#9400D3',\n          '&.Mui-selected': {\n            backgroundColor: '#4B0082',\n          },\n          '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n            {\n              color: '#9400D3',\n            },\n        },\n      }}\n    />\n  );\n};\n\nexport default PaginationComponent;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport MovieList from '../../components/MoviesList/MoviesList';\nimport SearchComponent from '../../components/SearchComponent/SearchComponent';\nimport { fetchMovieDetailsData } from '../../services/api';\nimport Notification from '../../components/Notification/Notification';\nimport PaginationListComponent from '../../components/PaginationListComponent/PaginationListComponent';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setLoadingStatus] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const handleSearch = query => {\n    setCurrentPage(1);\n    setSearchParams({ query: query, page: currentPage });\n  };\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query') || '';\n    if (!searchQuery) return;\n    setLoadingStatus(true);\n\n    const fetchSearchMovies = async () => {\n      try {\n        const { page, results, total_pages } = await fetchMovieDetailsData(\n          searchQuery,\n          currentPage\n        );\n\n        setMoviesData(results);\n        setCurrentPage(page);\n        setTotalPages(total_pages);\n        setSearchParams({ query: searchQuery, page: currentPage });\n\n        if (!results.length) {\n          setSearchParams({});\n          return Notification(`Sorry, no movies found on query ${searchQuery}`);\n        }\n\n        return results;\n      } catch ({ message }) {\n        Notification(message);\n      } finally {\n        setLoadingStatus(false);\n      }\n    };\n    fetchSearchMovies();\n  }, [searchParams, currentPage, setSearchParams]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <SearchComponent onSearch={handleSearch} />\n\n      {totalPages > 1 && (\n        <PaginationListComponent\n          totalPages={totalPages}\n          currentPage={currentPage}\n          onPageChange={setCurrentPage}\n        />\n      )}\n\n      {moviesData.length > 0 && (\n        <MovieList movies={moviesData} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst KEY = 'd5170ea2407a5ced420ab5693f361d7d';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: KEY,\n};\nexport const fetchTrend = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\nexport const fetchSearch = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMovieDetailsData = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`3/movie/${id}/reviews`);\n\n  return data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","MovieLink","Link","_templateObject3","Image","_templateObject4","Title","_templateObject5","ReleaseDate","_templateObject6","_ref","movies","location","_jsx","children","map","_ref2","id","original_title","poster_path","release_date","_jsxs","to","concat","state","from","src","defaultImage","alt","message","Notify","backOverlay","info","background","Form","Input","Button","onSearch","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchValue","setSearchValue","onSubmit","e","preventDefault","console","log","query","trim","type","autoComplete","autoFocus","value","onChange","currentTarget","totalPages","currentPage","onPageChange","Pagination","count","page","_","pageNumber","color","sx","stroke","display","justifyContent","marginTop","backgroundColor","useLocation","moviesData","setMoviesData","_useState3","_useState4","isLoading","setLoadingStatus","_useState5","_useState6","setCurrentPage","_useState7","_useState8","setTotalPages","useEffect","searchQuery","get","fetchSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieDeta","results","total_pages","_context","prev","next","fetchMovieDetailsData","sent","length","abrupt","Notification","t0","finish","stop","apply","arguments","_Fragment","Loader","SearchComponent","PaginationListComponent","MovieList","axios","api_key","fetchTrend","_yield$axios$get","data","fetchSearch","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_x3","getCast","_ref4","_callee4","_yield$axios$get4","_context4","_x4","getReview","_ref5","_callee5","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}