{"version":3,"file":"static/js/485.44d75cdc.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Notification/Notification.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  margin: 20px;\n  width: 200px;\n  border: 1px solid #4b0082;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #4b0082;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.2em;\n  color: #2c3e50;\n  margin: 10px;\n`;\n\nexport const ReleaseDate = styled.p`\n  font-size: 0.8em;\n  color: #666;\n  margin: 10px;\n`;","import defaultImage from '../../images/default-poster.jpg';\nimport {\n  List,\n  ListItem,\n  Image,\n  MovieLink,\n  Title,\n  ReleaseDate,\n} from './MoviesList.styled';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path, release_date }) => (\n        <ListItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImage\n              }\n              alt={original_title}\n            />\n            <Title>{original_title}</Title>\n            {release_date && <ReleaseDate />}\n          </MovieLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default MovieList;\n","import { Notify } from 'notiflix';\n\nconst Notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#8a2be2',\n    },\n  });\n\n  return Notify.info(message);\n};\n\nexport default Notification;","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background-color: white;\n`;\n\nexport const Title = styled.h1`\n  font-size: 2em;\n  color: #fff;\n  margin-bottom: 20px;\n`;","import { Main, Title } from './Home.styled';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrend } from 'services/api';\nimport Notification from '../../components/Notification/Notification';\nimport Loader from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setLoadingStatus] = useState(true);\n\n  useEffect(() => {\n    setLoadingStatus(true);\n\n    const getTrendingMovies = async () => {\n      try {\n        const movies = await fetchTrend();\n        setMoviesData(movies);\n      } catch ({ message }) {\n        Notification(message);\n      } finally {\n        setLoadingStatus(false);\n      }\n    };\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <Main>\n      {isLoading && <Loader />}\n      <Title />\n      <MoviesList movies={moviesData}></MoviesList>\n    </Main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = 'd5170ea2407a5ced420ab5693f361d7d';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: KEY,\n};\nexport const fetchTrend = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\nexport const fetchSearch = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMovieDetailsData = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`3/movie/${id}/reviews`);\n\n  return data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","MovieLink","Link","_templateObject3","Image","_templateObject4","Title","_templateObject5","ReleaseDate","_templateObject6","_ref","movies","location","_jsx","children","map","_ref2","id","original_title","poster_path","release_date","_jsxs","to","concat","state","from","src","defaultImage","alt","message","Notify","backOverlay","info","background","Main","_useState","useState","_useState2","_slicedToArray","moviesData","setMoviesData","_useState3","_useState4","isLoading","setLoadingStatus","useEffect","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchTrend","sent","t0","Notification","finish","stop","apply","arguments","Loader","MoviesList","axios","api_key","_yield$axios$get","data","abrupt","results","fetchSearch","_callee2","_yield$axios$get2","_context2","_x","fetchMovieDetailsData","_ref3","_callee3","query","page","_yield$axios$get3","_context3","_x2","_x3","getCast","_ref4","_callee4","_yield$axios$get4","_context4","_x4","getReview","_ref5","_callee5","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}